Цель работы:
Изучить основы формата XML, правила его написания и применение данной технологии.
Мы постараемся раскрыть данную тему и донести информацию до вас таким образом, чтобы каждая часть была вами осмысленна и правильно понята.


Введение

Что такое XML? Зачем он нужен? И самое главное, актуально ли его изучение сегодня? 

XML(eXtensible Marcup Language) - расширяемый язык разметки. Его основная задача - структурированное хранение информации и работа с ней. Так же как и HTML, XML используется для разметки документов, но его отличие в том, что XML предназначен для работы с структурированными данными, такими как схемы, результаты запросов к страницам и так далее. Так же одно из его предназначений - альтернатива базам данных. Использование XML допустимо в различных программах, начиная от простейших текстовых редакторов, и заканчивая сложными программами, использующими координаты местности, например, геологические онлайн карты. То есть если вам нужно работать с большим объемом данных - XML ваш выбор. В основном его используют для описания конфигурационных файлов, хранящих настройки программы. Но не стоит забывать, что есть и альтернативное применение xml, например, для сборки проекта, но об этом чуть позже.

Этот формат был разработан в 1998 году и сразу же был признан многими разработчиками как весьма удачный. С тех пор он активно развивался и развивается по сей день. 


Предназначение и особенности XML

Когда язык только создавался весьма остро стоял вопрос о хранении данных. Интернет только-только начинал развиваться. Ведь первые браузеры появились в 1998 году. Мир увидел Google(15 сентября, хоть и финансирование началось в 1998 году) и Яндекс(23 сентября). Да и само программирование нуждалось в развитии. Тогда создатели языка XML решили сделать эту стезю лучше и основные требования к языку были следующие:

- Обработка документа не должна вызывать трудностей

- Создание обработчиков(парсеров) не должно вызывать проблем у разработчика и не должно занимать много времени

- Документы XML должны быть удобны для чтения

- У языка должно быть широкое применение

- Процесс создания документа так же не должен вызывать трудностей

- Язык должен иметь возможность использоваться в интернете

- Не должно быть ограничений по количеству описания данных


У формата XML, как и у любого другого формата, есть свои плюсы, выделяющие его среди других, дающие возможность делать то, что недоступно в других языках. И минусы, конечно,
минусы. Начнем именно с них. И так, к недостаткам языка XML можно отнести:

- Избыточность. Порой для реализации цели не требуется вся мощь языка и синтаксис оказывается избыточным. Дело в том, что формат xml больше бинарного представления в 10 раз и больше альтернативных вариантов хранения данных(JSON)

- Больший весь файлов по сравнению с конкурентами. Из-за большего размера может возникнуть проблема с длительностью обработки информации


Преимущества языка:

- XML удобный. Удобный как для человека, так и для программы

- Мультиплатформенный

- Имеет строгий синтаксис, а так же правила парсинга. Это позволяет ему быть
одновременно простым и эффективным

- Благодаря иерархической структуре подходит для описаня любых типов данных

- Основан на международных стандартах

- Есть поддержка Юникода

Теория - это, конечно, хорошо, но посмотрим на более конкретных примеров, использование xml:

- Чаще всего работа с данными представлена как общение между СУБД (с особенностями конкретной СУБД) и самим приложением. Этот формат же предоставляет данные в универсальном формате. Тогда работа СУБД станет "прозрачной" для самого приложения. Более того, сейчас сервис W3C разрабатывает язык XQL, вполне возможно, станет заменой для обычного SQL
- Описание отдельных частей документа

- Хранение в удобном виде данных из интернета(парсинг)

- Хранение отдельных записей(если вы разрабатываете блокнот)

- Различные ссылки из интернета(почтовые адреса, ссылки и так далее)




Основные правила написания XML документов:

- Первой строкой происходит объявление. Необходимо указать версию языка и доп. данные
- Необходимо закрывать парные теги
- Регистрозависимость
- Значения атрибутов необходимо указывать и обрамлять кавычками
- Строгая вложенность тегов друг в друга. Необходимо следить со структурой вложенности для избежания ошибок
- Информация, расположенная между открывающим и закрывающим тегами, считается данными. Из-за этого все пробельные символы будут считаны. А именно табуляция, переносы строк и пробелы



Структура документа:

Рассмотрим пример создания xml документа, описывающего аккаунт пользователя в какой-либо социальной сети. В документе xml всегда есть как минимум один корневой тег. В нашем случае корневым тегом является парный "account". В нем находится три вложенных тега - "photos","videos" и "notes". Теги "photos" и "videos" содержат в себе по два одиночных тега - "photo" и "video" соответственно. А в тегах "notes" расположено 4 элемента.

<?xml version="1.0" encoding="utf-8"?>
<account>
	<photos>
		<photo title="some photo 1"/>
		<photo title="some photo 2"/>
	</photos>
	<videos>
		<video_block title="some video 1" />
		<video_block title="some video 2" />
	</videos>
	<notes>
		<note id="1">
			Some text first note
		</note>
		<note id="2">
			Some text second note
		</note>
		<note id="3">
			Some text therd note
		</note>
		<note id="4">
			Some text four note
		</note>
	</notes>
</account>

Как вы могли заметить в примере, в XML, как и в HTML, существует два вида тегов: парные и одиночные. 